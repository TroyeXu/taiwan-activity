# 部署到 GitHub Pages 的工作流程
name: Deploy to GitHub Pages

on:
  # 當推送到 main 分支時觸發
  push:
    branches:
      - main
  # 允許手動觸發工作流程
  workflow_dispatch:

# 設定所需權限
permissions:
  contents: read      # 讀取倉庫內容
  pages: write       # 寫入 GitHub Pages
  id-token: write    # 用於 OIDC 驗證

# 並發控制
concurrency:
  group: "pages"
  cancel-in-progress: false  # 不取消正在進行的部署

jobs:
  # 建構工作
  build:
    runs-on: ubuntu-latest
    steps:
      # 檢出程式碼
      - name: Checkout
        uses: actions/checkout@v4

      # 設定 Node.js 環境
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm

      # 安裝相依套件
      - name: Install dependencies
        run: npm install --legacy-peer-deps

      # 初始化資料庫
      - name: Initialize database
        run: npm run db:init

      # 複製資料庫到公開目錄
      - name: Copy database to public
        run: cp database/tourism.sqlite public/tourism.sqlite

      # 建構靜態網站
      - name: Build
        run: npm run generate

      # 上傳建構產物
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .output/public

  # 部署工作
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build  # 需要等待 build 工作完成
    steps:
      # 部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4